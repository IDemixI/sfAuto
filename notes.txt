Desktop Notification on new case (PoC):

// Grab Original case count.
var currentCaseCount = document.getElementById("ext-gen12").childElementCount;

if (document.getElementById("ext-gen12").childElementCount <> currentCaseCount) {
	// Case number has changed. Push Desktop Notification
}

Possibly store cases in an array and check against the array to see changes, as opposed to number of cases. This will eliminate the issue of creating a notification when
a case is removed from the queue. Maybe still keep the count as part of the notifcation?

"Salesforce Support Queue"
"A new case/response has been received - "case number - description"
"Total Cases in queue: 123"


TODO:

	IMPORTANT:

	Proper version control as opposed to random commits being thrown in.
	Desktop Notification when a new case is added to the queue - work on above code as it will currently still notifiy the user when a case is removed from the queue...
	Options menu to set interval, idle timeout & notification settings.
	
	OTHER:
	
	Open new cases in a new tab (option to set alias and only do this for your alias? Or only status new? or both!?)
	Ability to "highlight" cases of specific type like previous todo. Choose colour, etc?
	
	RESOURCES:
	
	https://stackoverflow.com/questions/23244338/pure-javascript-fade-in-function
	https://stackoverflow.com/questions/574944/how-to-load-up-css-files-using-javascript
	http://youmightnotneedjquery.com/
	https://attacomsian.com/blog/desktop-notifications-javascript
	
	
	
HTML:
<div id="div1">ABCDEFG</div>

CSS:

#div1 {
  background: rgba(0, 0, 255, 0.6);
  color: white;
  padding: 5px;
  border-radius: 18px;
  width: 100px;
  text-align: center;
}

JS:

var el = document.getElementById("div1");

function fadeIn(el, time) {
  el.style.opacity = 0;

  var last = +new Date();
  var tick = function() {
    el.style.opacity = +el.style.opacity + (new Date() - last) / time;
    last = +new Date();

    if (+el.style.opacity < 1) {
      (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);
    }
  };

  tick();
}

fadeIn(el, 2000);
